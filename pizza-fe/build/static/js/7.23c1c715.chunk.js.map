{"version":3,"sources":["reducers/form/form.utils.js","components/modal-input/modal-input.component.jsx","providers/menu/menu.utils.js","components/modal-form/modal-form.component.jsx","components/menu-modal/menu-modal.component.jsx","components/menu-item/menu-item.component.jsx","components/menu-collection/menu-collection.component.jsx","pages/menu/menu.component.jsx"],"names":["validationWarning","validationStatus","Object","keys","reduce","currentValidationStatus","currentKey","stateUpdate","state","targetNode","updatedValue","correctedPayload","name","valueFn","value","ModalInput","listName","children","FormGroup","row","Label","sm","Col","OrderInitializer","size","addOns","styles","small","large","food_name","style","ModalForm","item","mapKey","useContext","MenuContext","menuState","menuDispatch","menuOrder","menuSettings","menu","modal","order","triggerModal","defaultOrder","indexOf","useEffect","filter","itemSize","type","payload","parseFloat","small_price","large_price","addOnPrice","addOn","PIZZA_STYLES","cheese","special","1","2","3","pizzaDeterminant","length","pizzaResult","pizza","pizza_type","pizza_styles","img_url","handleChangeSize","e","target","id","handleChangeAddOns","addOnsTarget","getAttribute","checked","preventDefault","alert","handleChangeStyle","addOnsDisabled","ModalBody","Form","map","attr","CustomInput","key","label","onChange","selected","disabled","data-addons","data-key","MenuModal","addItem","CartContext","isToggled","totalPrice","toggleModal","Modal","isOpen","toggle","className","ModalHeader","ModalFooter","toFixed","Button","onClick","addOnsList","price","itemPrice","groupId","MenuItem","menuItem","displayPrice","Card","CardImg","top","src","alt","CardBody","CardTitle","margin","CardText","orderDefaults","MenuCollection","menuCollection","display","displayMenu","replaceWith","CardDeck","MenuPage","a","async","JSON","parse","window","localStorage","getItem","fetch","then","response","clone","responses","Promise","all","json","text","setItem","console","log","index"],"mappings":"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","file":"static/js/7.23c1c715.chunk.js","sourcesContent":["export const validationWarning = (validationStatus = null) => {\n  if (validationStatus == null) {\n    return null;\n  } else if (typeof validationStatus == \"object\") {\n    return Object.keys(validationStatus).reduce((currentValidationStatus, currentKey) => ({\n      ...currentValidationStatus,\n      [currentKey]: validationWarning(validationStatus[currentKey])\n    }), {});\n  } else if (typeof validationStatus == \"boolean\") {\n    return !validationStatus;\n  }\n};\n\nexport const stateUpdate = (state, targetNode, updatedValue) => ({\n  ...state,\n  [targetNode]: updatedValue\n});\n\nexport const correctedPayload = name => valueFn => ({\n  name: name,\n  value: valueFn\n});","import React from \"react\";\n\nimport { FormGroup, Label, Col } from \"reactstrap\"\n\n\nconst ModalInput = ({ listName, children }) => (\n  <FormGroup row>\n    <Label sm={3}>{ listName }</Label>\n    <Col sm={9}>\n        { children }\n      </Col>\n  </FormGroup>\n);\n\nexport default ModalInput; ","import { getCSRFToken } from \"../../reducers/root.utils\";\n\n\nexport const fetchMenu = () => {\n  return JSON.parse(window.localStorage.getItem(\"menu\")) || fetch(\"/api/menu\", \n  // {\n    // mode: 'cors',\n    // credentials: 'include',\n    // headers: {\n      // 'Content-Type': 'application/json',\n      // 'Accept': 'application/json',\n      // 'Origin': 'http://192.168.43.6:3000'\n      // 'X-CSRFToken': getCSRFToken()\n    // }}\n    )\n    .then(response => [response, response.clone()])\n    .then(responses => Promise.all([responses[0].json(), responses[1].text()]))\n    .then(responses => {\n      window.localStorage.setItem(\"menu\", responses[1]);\n      return responses[0];\n    });\n};\n\nexport const OrderInitializer = (size, addOns, styles) => ({\n  size: size ? {\n    small: false,\n    large: false\n  }: false,\n  addOns: addOns ? addOns.reduce((addOns, { food_name }) => ({\n    ...addOns,\n    [food_name]: false\n  }), {}) : false,\n  style: styles ? styles.reduce((styles, style) => ({\n    ...styles,\n    [style]: false\n  }), {}) : false\n});","import React, { useEffect, useContext } from 'react';\n\nimport ModalInput from \"../modal-input/modal-input.component\";\n\nimport { MenuContext } from \"../../providers/menu/menu.provider\";\n\nimport { correctedPayload, stateUpdate } from '../../reducers/form/form.utils';\nimport { OrderInitializer } from \"../../providers/menu/menu.utils\";\n\nimport { ModalBody, CustomInput, Form } from 'reactstrap';\n\n\nconst ModalForm = ({ item, mapKey }) => {\n  const { menuState, menuDispatch, menuOrder, menuSettings } = useContext(MenuContext);\n  const { menu, modal, order } = menuState;\n\n  const { size, addOns, styles } = menuSettings[menuOrder[mapKey]].triggerModal;\n\n  const defaultOrder = OrderInitializer(size, menu[menuOrder.indexOf(addOns)], styles);\n\n  useEffect(() => {\n    let [ itemSize ] = Object.keys(modal.size).filter(size => modal.size[size]);\n\n    if (itemSize && order.item) {\n      menuDispatch({\n        type: \"ORDER_SET_ITEM_PRICE\",\n        payload: parseFloat(itemSize === \"small\" ? item.small_price : item.large_price)\n      })\n    }\n  }, [modal.size, order.item]);\n\n  useEffect(() => {\n    menuDispatch({\n      type: \"ORDER_SET_ADDONS_PRICE\",\n      payload: order.addOns.reduce((addOnPrice, addOn) => addOnPrice + \n        parseFloat(menu[menuOrder.indexOf(addOns)][addOn][\"small_price\"] || 0)\n      , 0)\n    });\n  }, [order.addOns]);\n\n  useEffect(() => {\n    const PIZZA_STYLES = {\n      cheese: \"CZ\",\n      special: \"SP\",\n      1: \"1T\",\n      2: \"2T\",\n      3: \"3T\" \n    };\n\n    const pizzaDeterminant = order.addOns.length || \n      Object.keys(modal.style).filter(style => modal.style[style])[0];\n      \n    const pizzaResult = menu[menuOrder.indexOf(\"Pizza\")].filter(pizza => \n      pizza.pizza_type === item.pizza_type && \n      pizza.pizza_styles === PIZZA_STYLES[pizzaDeterminant])[0];\n\n    menuDispatch({\n      type: \"ORDER_SET_PIZZA\",\n      payload: pizzaResult ? {\n        ...pizzaResult,\n        img_url: item.img_url\n      } : order.item\n    });\n  }, [order.addOns, modal.style]);\n\n  const handleChangeSize = e => menuDispatch({\n    type: \"UPDATE_ORDER\",\n    payload: correctedPayload(e.target.name)(stateUpdate(defaultOrder.size, e.target.id, true))\n  });\n\n  const handleChangeAddOns = e => {\n    const addOnsTarget = e.target.getAttribute(\"data-addons\");\n    if (!e.target.checked || order.addOns.length < (addOnsTarget !== \"SubsAddition\" ? 3 : 4)) {\n      menuDispatch({\n        type: \"UPDATE_ORDER\",\n        payload: correctedPayload(e.target.name)(stateUpdate(modal.addOns, e.target.id, e.target.checked))\n      });\n\n      menuDispatch({\n        type: \"ORDER_SET_ADDONS\",\n        payload: {\n          modal: addOnsTarget === \"Topping\" ? stateUpdate(modal.style, \"toppings\", true) : modal.style,\n          checked: e.target.checked,\n          addOn: e.target.getAttribute(\"data-key\")\n        }\n      });\n    } else {\n      e.preventDefault();\n      e.target.checked = false;\n      alert(\"Please only choose 1 to 3 items!\");\n    }\n  };\n\n  const handleChangeStyle = e => menuDispatch({\n    type: \"PIZZA_SET_STYLE\",\n    payload: {\n      style: stateUpdate(defaultOrder.style, e.target.id, true),\n      addOnsDisabled: e.target.id !== \"toppings\",\n      addOns: e.target.id === \"toppings\" ? modal.addOns : defaultOrder.addOns, \n      order:  e.target.id === \"toppings\" ? order.addOns : []\n    }\n  });\n    \n  return (\n    <ModalBody>\n      <Form>\n        {\n          styles && <ModalInput listName=\"Types\" >\n            {\n              styles.map(attr => (\n                <CustomInput \n                  type=\"radio\" \n                  id={attr} \n                  name=\"style\" \n                  key={attr} \n                  label={attr} \n                  onChange={handleChangeStyle} \n                  checked={modal.style[attr]} />                  \n              ))\n            }\n          </ModalInput>\n        }{\n          size && <ModalInput listName=\"Size\">\n            <CustomInput type=\"radio\" selected={modal.size[\"small\"]} name=\"size\" id=\"small\" label=\"Small\" disabled={!item.small_price} onChange={handleChangeSize} />\n            <CustomInput type=\"radio\" selected={modal.size[\"large\"]} name=\"size\" id=\"large\" label=\"Large\" onChange={handleChangeSize} />\n          </ModalInput>\n        }{\n          menu[menuOrder.indexOf(addOns)] && <ModalInput listName=\"Add ons\">\n            {\n              menu[menuOrder.indexOf(addOns)].map(({ id, food_name }) => <CustomInput \n                type=\"checkbox\" \n                id={food_name} \n                key={food_name} \n                label={food_name} \n                name=\"addOns\"\n                data-addons={addOns}\n                data-key={id-1} // to correspond to addOns array index\n                disabled={modal.addOnsDisabled}\n                checked={modal.addOns[food_name]}\n                onChange={handleChangeAddOns}                 \n              />)\n            }\n          </ModalInput>\n        }\n      </Form>\n    </ModalBody>\n  );\n};\n\nexport default ModalForm;","import React, { useContext } from 'react';\n\nimport ModalForm from \"../modal-form/modal-form.component\";\n\nimport { CartContext } from \"../../providers/cart/cart.provider\";\nimport { MenuContext } from \"../../providers/menu/menu.provider\";\n\nimport { Button, Modal, ModalHeader, ModalFooter } from 'reactstrap';\nimport \"./menu-modal.styles.scss\";\n\n\nconst MenuModal = () => {\n  const { addItem } = useContext(CartContext);\n  const { menuState, menuDispatch, menuOrder, menuSettings } = useContext(MenuContext);\n  const { menu, order, modal } = menuState;\n  const { isToggled } = modal;\n  const { item, mapKey, totalPrice } = order;\n  \n  const toggleModal = () => menuDispatch({ type: \"TOGGLE_MODAL\" });\n\n  const handleClick = () => {\n    const addOnsList = menu[menuOrder.indexOf(menuSettings[menuOrder[mapKey]].triggerModal.addOns)];\n    \n    addItem({\n      img_url: item.img_url,\n      id: item.id,\n      name: item.food_name,\n      size: Object.keys(modal.size).filter(size => modal.size[size])[0],\n      price: order.totalPrice,\n      itemPrice: order.itemPrice,\n      addOns: order.addOns.map(key => addOnsList[key]),\n      groupId: menuOrder[mapKey]\n    });\n    toggleModal();\n  };\n\n  if (item) {\n    const { food_name } = item;\n\n    return (\n      <Modal isOpen={isToggled} toggle={toggleModal} className=\"menu-modal\">\n        <ModalHeader toggle={toggleModal}>{ food_name }</ModalHeader>\n        <ModalForm item={item} mapKey={mapKey} />\n        <ModalFooter>\n          { totalPrice === 0 ? null : <span>{ \"$ \" + totalPrice.toFixed(2) }</span> }\n          <Button className=\"modal-button\" onClick={ handleClick } disabled={totalPrice === 0}>Yes I want this!</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  } else return null;\n};\n\nexport default MenuModal;","import React, { useContext } from \"react\";\n\nimport { CartContext } from \"../../providers/cart/cart.provider\";\nimport { MenuContext } from \"../../providers/menu/menu.provider\";\n\nimport { OrderInitializer } from \"../../providers/menu/menu.utils\";\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, Button\n} from \"reactstrap\";\nimport \"./menu-item.styles.scss\";\n\n\nconst MenuItem = ({ menuItem, mapKey }) => {\n  const { addItem } = useContext(CartContext);\n  const { menuState: { menu }, menuDispatch, menuOrder, menuSettings } = useContext(MenuContext);\n\n  const { img_url, id, food_name, price, small_price, large_price } = menuItem;\n  const { triggerModal, disabled } = menuSettings[menuOrder[mapKey]];\n  const { size, styles, addOns } = triggerModal;\n  const addOnsList = addOns && menu[menuOrder.indexOf(addOns)];\n\n  const displayPrice = price || small_price || large_price;\n\n  const handleClick = () => {\n    menuDispatch({\n      type: \"ORDER_START\",\n      payload: {\n        modal: {\n          isToggled: !!triggerModal,\n          orderDefaults: OrderInitializer(size, addOnsList, styles)\n        },\n        order: {\n          item: menuItem,\n          mapKey: mapKey\n        }\n      }\n    });\n\n    if (!triggerModal) {\n      addItem({\n        img_url: img_url,\n        id,\n        name: food_name,\n        price,\n        groupId: menuOrder[mapKey]\n      });\n    }\n  }\n\n  // need to account for price, small_price and items with no prices\n  return (\n    <Card className=\"menu-item mb-3\">\n      <CardImg top src={img_url || \"300x200.svg\"} alt=\"Card image cap\" className=\"menu-item-image\" />\n      <CardBody>\n        <CardTitle className=\"menu-item-text\">\n          <p style={ price || displayPrice ? null : { margin: \"auto\" } }>{ food_name }</p>\n          {\n            displayPrice && <p>{ price || displayPrice + \"+\" }</p>\n          }\n        </CardTitle>\n        <CardText>\n          {\n            disabled || <Button className=\"menu-item-purchase\" onClick={ handleClick }>Add to cart</Button>\n          }\n        </CardText>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MenuItem;","import React, { useContext } from \"react\";\n\nimport MenuItem from \"../menu-item/menu-item.component\";\nimport { MenuContext } from \"../../providers/menu/menu.provider\";\n\nimport { CardDeck } from \"reactstrap\";\n\n\nconst MenuCollection = ({ menuCollection, mapKey }) => {\n  const { menuOrder, menuSettings } = useContext(MenuContext);\n  const { name, display, replaceWith } = menuSettings[menuOrder[mapKey]];\n  const displayMenu = replaceWith || menuCollection;\n\n  if (display) {\n    return (\n      <section>\n        <p className=\"mb-2 h4 text-muted\">{ name }</p>\n        <CardDeck className=\"mb-4\">\n          {\n            displayMenu.map(menuItem => <MenuItem menuItem={menuItem} key={menuItem.id} mapKey={mapKey} />)\n          }\n        </CardDeck>\n      </section>\n    );\n  } else return null; \n};\n\nexport default MenuCollection;","import React, { useEffect, useContext } from \"react\";\n\nimport MenuModal from \"../../components/menu-modal/menu-modal.component\";\nimport MenuCollection from \"../../components/menu-collection/menu-collection.component\";\nimport Loader from \"../../components/loader/loader.component\";\n\nimport { MenuContext } from \"../../providers/menu/menu.provider\";\n\nimport { fetchMenu } from \"../../providers/menu/menu.utils\";\n\nimport \"./menu.styles.scss\";\n\n\nconst MenuPage = () => {\n  const { menuState, menuDispatch, menuOrder } = useContext(MenuContext);\n  const { menu } = menuState;\n  \n  useEffect(() => {\n    const fetchMenuData = async () => {\n      try {\n        await fetchMenu();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMenuData();\n    // Promise.resolve(fetchMenu()).then(menu => menuDispatch({ \n    //   type: \"SET_MENU\", \n    //   payload: menuOrder.map(group => menu[group])\n    // })\n}, []);\n\n  return (\n    <main className=\"menu-page\">\n      {\n        menu?.map((menuCollection, index) => \n          <MenuCollection menuCollection={menuCollection} key={index} mapKey={index} />) ||\n        <Loader />\n      }\n      <MenuModal />\n    </main>\n  );\n};\n\nexport default MenuPage;"],"sourceRoot":""}